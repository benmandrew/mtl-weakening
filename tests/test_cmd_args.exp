#!/usr/bin/expect -f

log_user 1

proc expect_exact {text} {
	expect {
		-exact $text {}
		timeout {
			puts "Expected: '$text'"
			exit 1
		}
		eof {
			puts "Program ended too early (wanted '$text')"
			exit 1
		}
	}
}

spawn python3 -m src.mtl2ltlspec -h

expect_exact "usage: mtl2ltlspec.py \[-h\] \[--mtl MTL\]"
expect_exact ""
expect_exact "Convert MTL formula to SMV-compatible LTL specifications."
expect_exact ""
expect_exact "options:"
expect_exact "  -h, --help  show this help message and exit"
expect_exact "  --mtl MTL   MTL specification"


spawn python3 -m src.trace2marking -h

expect_exact "usage: trace2marking.py \[-h\] \[--quiet | --debug\] trace_file"
expect_exact ""
expect_exact "Analyse NuXmv output."
expect_exact ""
expect_exact "positional arguments:"
expect_exact "  trace_file  Path to the trace file to analyse. If not provided, stdin will be used."
expect_exact ""
expect_exact "options:"
expect_exact "  -h, --help  show this help message and exit"
expect_exact "  --quiet"
expect_exact "  --debug"


spawn python3 -m src.analyse_cex -h

expect_exact "usage: analyse_cex.py \[-h\] \[--mtl MTL\] \[--de-bruijn DE_BRUIJN\] \[--quiet | --debug\] trace_file"
expect_exact ""
expect_exact "Analyse NuXmv output."
expect_exact ""
expect_exact "positional arguments:"
expect_exact "  trace_file            Path to the trace file to analyse. If not provided, stdin will be used."
expect_exact ""
expect_exact "options:"
expect_exact "  -h, --help            show this help message and exit"
expect_exact "  --mtl MTL             MTL specification"
expect_exact "  --de-bruijn DE_BRUIJN"
expect_exact "                        De Bruijn index of the subformula as a list of integers"
expect_exact "  --quiet"
expect_exact "  --debug"
